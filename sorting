#include<bits/stdc++.h>
using namespace std;

vector<int>merge_sort(vector<int>a)
{

    if(a.size()<=1)
    {
        return a;
    }
    vector<int>left;
    vector<int>right;

    int mid=a.size()/2;

    for(int i=0;i<mid;i++)
    {
        left.push_back(a[i]);
    }
    for(int i=mid;i<a.size();i++)
    {
        right.push_back(a[i]);
    }

    // recursive part

    vector<int>sorted_left=merge_sort(left);
    vector<int>sorted_right=merge_sort(right);


    //conquer part

    vector<int>answer;

    int p1=0;
    int p2=0;


    for(int i=0;i<a.size();i++)
    {
        if(p1==sorted_left.size())
        {
            answer.push_back(sorted_right[p2]);
            p2++;
        }
         else if(p2==sorted_right.size())
        {
            answer.push_back(sorted_left[p1]);
            p1++;
        }
        else if(sorted_left[p1]<sorted_left[p2])
        {
            answer.push_back(sorted_left[p1]);
            p1++;
        }
        else
        {
            answer.push_back(sorted_right[p2]);
            p2++;
        }
    }


}

int main()
{


    vector<int>vec={4,5,1,3,2};


    vector<int>ans=merge_sort(vec);

    for(int i=0;i<ans.size();i++)
    {

        cout<<vec[i];
    }






}
